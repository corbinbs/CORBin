/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef factory_H
#define factory_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_Account) && !defined(_Account_defined)
#define ORBIT_DECL_Account 1
#define _Account_defined 1
#define Account__free CORBA_Object__free
   typedef CORBA_Object Account;
   extern CORBA_unsigned_long Account__classid;
#if !defined(TC_IMPL_TC_Account_0)
#define TC_IMPL_TC_Account_0 'f'
#define TC_IMPL_TC_Account_1 'a'
#define TC_IMPL_TC_Account_2 'c'
#define TC_IMPL_TC_Account_3 't'
#define TC_IMPL_TC_Account_4 'o'
#define TC_IMPL_TC_Account_5 'r'
#define TC_IMPL_TC_Account_6 'y'
   extern const struct CORBA_TypeCode_struct TC_Account_struct;
#define TC_Account ((CORBA_TypeCode)&TC_Account_struct)
#endif
#endif
#if !defined(ORBIT_DECL_factory) && !defined(_factory_defined)
#define ORBIT_DECL_factory 1
#define _factory_defined 1
#define factory__free CORBA_Object__free
   typedef CORBA_Object factory;
   extern CORBA_unsigned_long factory__classid;
#if !defined(TC_IMPL_TC_factory_0)
#define TC_IMPL_TC_factory_0 'f'
#define TC_IMPL_TC_factory_1 'a'
#define TC_IMPL_TC_factory_2 'c'
#define TC_IMPL_TC_factory_3 't'
#define TC_IMPL_TC_factory_4 'o'
#define TC_IMPL_TC_factory_5 'r'
#define TC_IMPL_TC_factory_6 'y'
   extern const struct CORBA_TypeCode_struct TC_factory_struct;
#define TC_factory ((CORBA_TypeCode)&TC_factory_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      
	 Account(*newAccount) (PortableServer_Servant _servant,
			       const CORBA_unsigned_long balance,
			       CORBA_Environment * ev);
   }
   POA_factory__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_factory__epv *factory_epv;
   }
   POA_factory__vepv;
   typedef struct
   {
      void *_private;
      POA_factory__vepv *vepv;
   }
   POA_factory;
   extern void POA_factory__init(PortableServer_Servant servant,
				 CORBA_Environment * ev);
   extern void POA_factory__fini(PortableServer_Servant servant,
				 CORBA_Environment * ev);

/** prototypes **/
   Account factory_newAccount(factory _obj, const CORBA_unsigned_long balance,
			      CORBA_Environment * ev);

   void _ORBIT_skel_factory_newAccount(POA_factory * _ORBIT_servant,
				       GIOPRecvBuffer * _ORBIT_recv_buffer,
				       CORBA_Environment * ev,
				       Account(*_impl_newAccount)
				       (PortableServer_Servant _servant,
					const CORBA_unsigned_long balance,
					CORBA_Environment * ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
