(* cutil.sml
 * 
 * The SMLNJ-C Interface is COPYRIGHT (c) 1996 Bell Laboratories, Lucent Technologies
 *)

functor CUtil (structure C: C_CALLS) : C_UTIL = 
	 struct 
		 open C

(****Main CORBin-lib Routines****)
	 val CORBin_exception_init' = 
		 registerAutoFreeCFn("CORBin_exception_init",[CaddrT], CintT)
	 fun CORBin_exception_init p = 
		 let val Cint s = CORBin_exception_init' [Caddr p] in s end
	 val CORBin_orb_init' = 
		 registerAutoFreeCFn("CORBin_orb_init",[CaddrT], CintT)
	 fun CORBin_orb_init p = 
		 let val Cint s = CORBin_orb_init' [Caddr p] in s end
	 val CORBin_string_to_object' = 
		 registerAutoFreeCFn("CORBin_string_to_object",[CaddrT], CaddrT)
	 fun CORBin_string_to_object p = 
		 let val Caddr s = CORBin_string_to_object' [Caddr p] in s end
	 val CORBin_Object_release' = 
		 registerAutoFreeCFn("CORBin_Object_release",[CaddrT], CintT)
	 fun CORBin_Object_release p = 
		 let val Cint s = CORBin_Object_release' [Caddr p] in s end
(****routines generated by corbin-idl****)

	val CORBin_Account_deposit' = 
		registerAutoFreeCFn("CORBin_Account_deposit", [CaddrT,ClongT], CvoidT)
	fun CORBin_Account_deposit (CORBin_this_obj_ref,amount) = 
		let val Cvoid  = CORBin_Account_deposit' [Caddr CORBin_this_obj_ref,Clong amount] in  ()  end 

	val CORBin_Account_withdraw' = 
		registerAutoFreeCFn("CORBin_Account_withdraw", [CaddrT,ClongT], CvoidT)
	fun CORBin_Account_withdraw (CORBin_this_obj_ref,amount) = 
		let val Cvoid  = CORBin_Account_withdraw' [Caddr CORBin_this_obj_ref,Clong amount] in  ()  end 



end (*end of cutil.sml*)
