/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef passlong_H
#define passlong_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_passlong) && !defined(_passlong_defined)
#define ORBIT_DECL_passlong 1
#define _passlong_defined 1
#define passlong__free CORBA_Object__free
   typedef CORBA_Object passlong;
   extern CORBA_unsigned_long passlong__classid;
#if !defined(TC_IMPL_TC_passlong_0)
#define TC_IMPL_TC_passlong_0 'p'
#define TC_IMPL_TC_passlong_1 'a'
#define TC_IMPL_TC_passlong_2 's'
#define TC_IMPL_TC_passlong_3 's'
#define TC_IMPL_TC_passlong_4 'l'
#define TC_IMPL_TC_passlong_5 'o'
#define TC_IMPL_TC_passlong_6 'n'
#define TC_IMPL_TC_passlong_7 'g'
   extern const struct CORBA_TypeCode_struct TC_passlong_struct;
#define TC_passlong ((CORBA_TypeCode)&TC_passlong_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      
	 CORBA_long(*foo) (PortableServer_Servant _servant,
			   const CORBA_long x, CORBA_Environment * ev);
   }
   POA_passlong__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_passlong__epv *passlong_epv;
   }
   POA_passlong__vepv;
   typedef struct
   {
      void *_private;
      POA_passlong__vepv *vepv;
   }
   POA_passlong;
   extern void POA_passlong__init(PortableServer_Servant servant,
				  CORBA_Environment * ev);
   extern void POA_passlong__fini(PortableServer_Servant servant,
				  CORBA_Environment * ev);

/** prototypes **/
   CORBA_long passlong_foo(passlong _obj, const CORBA_long x,
			   CORBA_Environment * ev);

   void _ORBIT_skel_passlong_foo(POA_passlong * _ORBIT_servant,
				 GIOPRecvBuffer * _ORBIT_recv_buffer,
				 CORBA_Environment * ev,
				 CORBA_long(*_impl_foo)
				 (PortableServer_Servant _servant,
				  const CORBA_long x,
				  CORBA_Environment * ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
